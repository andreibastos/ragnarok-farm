// Map management module
import { SearchManager } from './search.js';

export class MapManager {
  constructor(database) {
    this.db = database;
  }

  addMapBlock(updateCallback) {
    const container = document.getElementById('mapSettings');
    
    // Remover a mensagem padrão se existir
    const defaultMessage = container.querySelector('.col-12 p');
    if (defaultMessage && defaultMessage.textContent === 'Nenhum mapa adicionado ainda.') {
      defaultMessage.parentElement.remove();
    }
    
    const uniqueId = `manual_${Date.now()}`;
    const block = document.createElement('div');
    block.className = 'col-lg-4 col-md-6 col-12';
    block.innerHTML = `
      <div class="card h-100">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-start mb-3">
            <h6 class="card-title mb-1">📍 Novo Mapa</h6>
            <button class="btn btn-sm btn-outline-danger" onclick="this.closest('.col-lg-4').remove()">
              ❌
            </button>
          </div>
          
          <div class="mb-2">
            <label class="form-label small">Nome do mapa</label>
            <input type="text" name="mapName[]" class="form-control form-control-sm" 
                   placeholder="Ex: prt_fild01" />
          </div>
          
          <div class="mb-2">
            <label class="form-label small">Monstro Alvo</label>
            <input type="text" name="mapMobName[]" class="form-control form-control-sm" 
                   placeholder="Nome do monstro" />
          </div>
          
          <div class="mb-2">
            <label class="form-label small">Permanência (quantidade de mobs)</label>
            <input type="number" name="mapStayValue[]" class="form-control form-control-sm" 
                   placeholder="Quantidade de mobs" />
          </div>
          
          <div class="mb-2">
            <label class="form-label small">Magia a usar</label>
            <select class="form-select form-select-sm" name="mapSpell[]">
              <option value="default" selected>🌟 Usar magia padrão</option>
            </select>
          </div>
          
          <div class="mb-2">
            <label class="form-label small">🎯 Itens específicos para este mapa</label>
            <div class="border rounded p-2 bg-light" style="min-height: 60px;">
              <div class="d-flex gap-2 mb-2 position-relative">
                <div class="flex-grow-1 position-relative">
                  <input type="text" class="form-control form-control-sm map-item-search" 
                         placeholder="Nome ou ID do item" 
                         onkeypress="if(event.key==='Enter'){window.farmApp.addItemToMap(this, event)}" />
                  <div class="map-item-results position-absolute w-100 bg-white border rounded shadow-sm" 
                       style="display: none; z-index: 1000; max-height: 200px; overflow-y: auto;"></div>
                </div>
                <button type="button" class="btn btn-sm btn-outline-primary" 
                        onclick="window.farmApp.addItemToMap(this.previousElementSibling.querySelector('input'))">
                  ➕
                </button>
              </div>
              <div class="map-items-list">
                <small class="text-muted">Nenhum item específico adicionado</small>
              </div>
              <input type="hidden" name="mapItems[]" value="" />
            </div>
          </div>
          
          <div class="mb-2">
            <button type="button" class="btn btn-outline-info btn-sm w-100" onclick="window.farmApp.showMapMobs(this)">
              👁️ Ver todos os monstros deste mapa
            </button>
          </div>
        </div>
      </div>
    `;
    container.appendChild(block);
    
    // Atualizar opções de magia após criar o mapa
    if (updateCallback) {
      updateCallback();
    }
  }

  renderSelectedMaps(selectedMapsWithMobs, removeCallback, updateCallback) {
    const mapSettings = document.getElementById('mapSettings');
    
    // Limpar mapas existentes (manter apenas blocos manuais)
    const existingBlocks = Array.from(mapSettings.children);
    existingBlocks.forEach(block => {
      if (block.dataset && block.dataset.autoGenerated === 'true') {
        block.remove();
      }
    });

    // Se não há mapas selecionados, mostrar mensagem padrão
    if (selectedMapsWithMobs.size === 0) {
      if (mapSettings.children.length === 0) {
        mapSettings.innerHTML = '<div class="col-12"><p>Nenhum mapa adicionado ainda.</p></div>';
      }
      return;
    }

    // Remover a mensagem padrão se existir
    const defaultMessage = mapSettings.querySelector('.col-12 p');
    if (defaultMessage && defaultMessage.textContent === 'Nenhum mapa adicionado ainda.') {
      defaultMessage.parentElement.remove();
    }

    // Adicionar mapas selecionados em formato deck com grid
    selectedMapsWithMobs.forEach((mapInfo, index) => {
      const uniqueId = `map_${Date.now()}_${index}`;
      const block = document.createElement('div');
      block.className = 'col-lg-4 col-md-6 col-12';
      block.dataset.autoGenerated = 'true';
      
      const mobImageUrls = mapInfo.mobId ? SearchManager.generateMobImageUrls(mapInfo.mobId) : [SearchManager.getDefaultMobImage()];
      
      block.innerHTML = `
        <div class="card h-100">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-start mb-3">
              <div>
                <h6 class="card-title mb-1">📍 ${mapInfo.map}</h6>
                <small class="text-muted">👹 ${mapInfo.mobCount}x ${mapInfo.mobName}</small>
              </div>
              <div class="d-flex align-items-center">
                <img src="${mobImageUrls[0]}" 
                     class="me-2 mob-image" width="40" height="40" alt="${mapInfo.mobName}"
                     data-mob-id="${mapInfo.mobId || 'unknown'}"
                     onerror="tryNextMobImage(this, ${JSON.stringify(mobImageUrls).replace(/"/g, '&quot;')}, 1)" />
                <button class="btn btn-sm btn-outline-danger" onclick="window.farmApp.removeSelectedMap('${mapInfo.map}')">
                  ❌
                </button>
              </div>
            </div>
            
            <div class="mb-2">
              <label class="form-label small">Permanência (quantidade de mobs)</label>
              <input type="number" name="mapStayValue[]" class="form-control form-control-sm" 
                     id="stayValue_${uniqueId}" placeholder="Auto: ${mapInfo.mobCount} mobs" value="${mapInfo.mobCount}" />
            </div>
            
            <div class="mb-2">
              <label class="form-label small">Magia a usar</label>
              <select class="form-select form-select-sm" name="mapSpell[]">
                <option value="default" selected>🌟 Usar magia padrão</option>
              </select>
            </div>
            
            <div class="mb-2">
              <label class="form-label small">🎯 Itens específicos para este mapa</label>
              <div class="border rounded p-2 bg-light" style="min-height: 60px;">
                <div class="d-flex gap-2 mb-2 position-relative">
                  <div class="flex-grow-1 position-relative">
                    <input type="text" class="form-control form-control-sm map-item-search" 
                           placeholder="Nome ou ID do item" 
                           onkeypress="if(event.key==='Enter'){window.farmApp.addItemToMap(this, event)}" />
                    <div class="map-item-results position-absolute w-100 bg-white border rounded shadow-sm" 
                         style="display: none; z-index: 1000; max-height: 200px; overflow-y: auto;"></div>
                  </div>
                  <button type="button" class="btn btn-sm btn-outline-primary" 
                          onclick="window.farmApp.addItemToMap(this.previousElementSibling.querySelector('input'))">
                    ➕
                  </button>
                </div>
                <div class="map-items-list">
                  <small class="text-muted">Nenhum item específico adicionado</small>
                </div>
                <input type="hidden" name="mapItems[]" value="" />
              </div>
            </div>
            
            <div class="mb-2">
              <button type="button" class="btn btn-outline-info btn-sm w-100" onclick="window.farmApp.showMapMobsFromCard(this)">
                👁️ Ver todos os monstros deste mapa
              </button>
            </div>
            
            <input type="hidden" name="mapName[]" value="${mapInfo.map}" />
          </div>
        </div>
      `;
      mapSettings.appendChild(block);
    });
    
    // Atualizar opções de magia após criar os mapas
    if (updateCallback) {
      updateCallback();
    }
  }
}
